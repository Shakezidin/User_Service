// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: user.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User_Count int64 `protobuf:"varint,1,opt,name=User_Count,json=UserCount,proto3" json:"User_Count,omitempty"`
}

func (x *UserCount) Reset() {
	*x = UserCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCount) ProtoMessage() {}

func (x *UserCount) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCount.ProtoReflect.Descriptor instead.
func (*UserCount) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserCount) GetUser_Count() int64 {
	if x != nil {
		return x.User_Count
	}
	return 0
}

type UserUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*UserSignup `protobuf:"bytes,1,rep,name=Users,proto3" json:"Users,omitempty"`
}

func (x *UserUsers) Reset() {
	*x = UserUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUsers) ProtoMessage() {}

func (x *UserUsers) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUsers.ProtoReflect.Descriptor instead.
func (*UserUsers) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *UserUsers) GetUsers() []*UserSignup {
	if x != nil {
		return x.Users
	}
	return nil
}

type TokenData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role  string `protobuf:"bytes,1,opt,name=Role,proto3" json:"Role,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	ID    string `protobuf:"bytes,3,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *TokenData) Reset() {
	*x = TokenData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenData) ProtoMessage() {}

func (x *TokenData) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenData.ProtoReflect.Descriptor instead.
func (*TokenData) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *TokenData) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *TokenData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *TokenData) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type UserHistories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Histories []*UserHistory `protobuf:"bytes,1,rep,name=Histories,proto3" json:"Histories,omitempty"`
}

func (x *UserHistories) Reset() {
	*x = UserHistories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserHistories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserHistories) ProtoMessage() {}

func (x *UserHistories) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserHistories.ProtoReflect.Descriptor instead.
func (*UserHistories) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *UserHistories) GetHistories() []*UserHistory {
	if x != nil {
		return x.Histories
	}
	return nil
}

type UserHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               int64                   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Payment_Mode     string                  `protobuf:"bytes,2,opt,name=Payment_Mode,json=PaymentMode,proto3" json:"Payment_Mode,omitempty"`
	Booking_Status   string                  `protobuf:"bytes,3,opt,name=Booking_Status,json=BookingStatus,proto3" json:"Booking_Status,omitempty"`
	Cancelled_Status string                  `protobuf:"bytes,4,opt,name=Cancelled_Status,json=CancelledStatus,proto3" json:"Cancelled_Status,omitempty"`
	Total_Price      int64                   `protobuf:"varint,5,opt,name=Total_Price,json=TotalPrice,proto3" json:"Total_Price,omitempty"`
	User_ID          int64                   `protobuf:"varint,6,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Booking_ID       string                  `protobuf:"bytes,7,opt,name=Booking_ID,json=BookingID,proto3" json:"Booking_ID,omitempty"`
	Book_Date        string                  `protobuf:"bytes,8,opt,name=Book_Date,json=BookDate,proto3" json:"Book_Date,omitempty"`
	Start_Date       string                  `protobuf:"bytes,9,opt,name=Start_Date,json=StartDate,proto3" json:"Start_Date,omitempty"`
	Travellers       []*UserTravellerDetails `protobuf:"bytes,10,rep,name=Travellers,proto3" json:"Travellers,omitempty"`
	Paid_Amount      int64                   `protobuf:"varint,11,opt,name=Paid_Amount,json=PaidAmount,proto3" json:"Paid_Amount,omitempty"`
}

func (x *UserHistory) Reset() {
	*x = UserHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserHistory) ProtoMessage() {}

func (x *UserHistory) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserHistory.ProtoReflect.Descriptor instead.
func (*UserHistory) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *UserHistory) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UserHistory) GetPayment_Mode() string {
	if x != nil {
		return x.Payment_Mode
	}
	return ""
}

func (x *UserHistory) GetBooking_Status() string {
	if x != nil {
		return x.Booking_Status
	}
	return ""
}

func (x *UserHistory) GetCancelled_Status() string {
	if x != nil {
		return x.Cancelled_Status
	}
	return ""
}

func (x *UserHistory) GetTotal_Price() int64 {
	if x != nil {
		return x.Total_Price
	}
	return 0
}

func (x *UserHistory) GetUser_ID() int64 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

func (x *UserHistory) GetBooking_ID() string {
	if x != nil {
		return x.Booking_ID
	}
	return ""
}

func (x *UserHistory) GetBook_Date() string {
	if x != nil {
		return x.Book_Date
	}
	return ""
}

func (x *UserHistory) GetStart_Date() string {
	if x != nil {
		return x.Start_Date
	}
	return ""
}

func (x *UserHistory) GetTravellers() []*UserTravellerDetails {
	if x != nil {
		return x.Travellers
	}
	return nil
}

func (x *UserHistory) GetPaid_Amount() int64 {
	if x != nil {
		return x.Paid_Amount
	}
	return 0
}

type UserPaymentConfirmedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email        string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Reference_ID string `protobuf:"bytes,2,opt,name=Reference_ID,json=ReferenceID,proto3" json:"Reference_ID,omitempty"`
	Payment_ID   string `protobuf:"bytes,3,opt,name=Payment_ID,json=PaymentID,proto3" json:"Payment_ID,omitempty"`
	User_ID      string `protobuf:"bytes,4,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Order_ID     string `protobuf:"bytes,5,opt,name=Order_ID,json=OrderID,proto3" json:"Order_ID,omitempty"`
	Signature    string `protobuf:"bytes,6,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Total        string `protobuf:"bytes,7,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *UserPaymentConfirmedRequest) Reset() {
	*x = UserPaymentConfirmedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPaymentConfirmedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPaymentConfirmedRequest) ProtoMessage() {}

func (x *UserPaymentConfirmedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPaymentConfirmedRequest.ProtoReflect.Descriptor instead.
func (*UserPaymentConfirmedRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *UserPaymentConfirmedRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserPaymentConfirmedRequest) GetReference_ID() string {
	if x != nil {
		return x.Reference_ID
	}
	return ""
}

func (x *UserPaymentConfirmedRequest) GetPayment_ID() string {
	if x != nil {
		return x.Payment_ID
	}
	return ""
}

func (x *UserPaymentConfirmedRequest) GetUser_ID() string {
	if x != nil {
		return x.User_ID
	}
	return ""
}

func (x *UserPaymentConfirmedRequest) GetOrder_ID() string {
	if x != nil {
		return x.Order_ID
	}
	return ""
}

func (x *UserPaymentConfirmedRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *UserPaymentConfirmedRequest) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

type UserFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int64  `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	Departure_Time string `protobuf:"bytes,2,opt,name=Departure_Time,json=DepartureTime,proto3" json:"Departure_Time,omitempty"`
	Min_Price      int64  `protobuf:"varint,3,opt,name=Min_Price,json=MinPrice,proto3" json:"Min_Price,omitempty"`
	Max_Price      int64  `protobuf:"varint,4,opt,name=Max_Price,json=MaxPrice,proto3" json:"Max_Price,omitempty"`
	Category_ID    int64  `protobuf:"varint,5,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
	Order_By       string `protobuf:"bytes,6,opt,name=Order_By,json=OrderBy,proto3" json:"Order_By,omitempty"`
	Status         bool   `protobuf:"varint,7,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *UserFilter) Reset() {
	*x = UserFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilter) ProtoMessage() {}

func (x *UserFilter) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilter.ProtoReflect.Descriptor instead.
func (*UserFilter) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *UserFilter) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserFilter) GetDeparture_Time() string {
	if x != nil {
		return x.Departure_Time
	}
	return ""
}

func (x *UserFilter) GetMin_Price() int64 {
	if x != nil {
		return x.Min_Price
	}
	return 0
}

func (x *UserFilter) GetMax_Price() int64 {
	if x != nil {
		return x.Max_Price
	}
	return 0
}

func (x *UserFilter) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

func (x *UserFilter) GetOrder_By() string {
	if x != nil {
		return x.Order_By
	}
	return ""
}

func (x *UserFilter) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UserOnlinePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User_ID           int32   `protobuf:"varint,1,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Total_Fare        float32 `protobuf:"fixed32,2,opt,name=Total_Fare,json=TotalFare,proto3" json:"Total_Fare,omitempty"`
	Booking_Reference string  `protobuf:"bytes,3,opt,name=Booking_Reference,json=BookingReference,proto3" json:"Booking_Reference,omitempty"`
	Email             string  `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	Order_ID          string  `protobuf:"bytes,5,opt,name=Order_ID,json=OrderID,proto3" json:"Order_ID,omitempty"`
}

func (x *UserOnlinePaymentResponse) Reset() {
	*x = UserOnlinePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOnlinePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOnlinePaymentResponse) ProtoMessage() {}

func (x *UserOnlinePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOnlinePaymentResponse.ProtoReflect.Descriptor instead.
func (*UserOnlinePaymentResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *UserOnlinePaymentResponse) GetUser_ID() int32 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

func (x *UserOnlinePaymentResponse) GetTotal_Fare() float32 {
	if x != nil {
		return x.Total_Fare
	}
	return 0
}

func (x *UserOnlinePaymentResponse) GetBooking_Reference() string {
	if x != nil {
		return x.Booking_Reference
	}
	return ""
}

func (x *UserOnlinePaymentResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserOnlinePaymentResponse) GetOrder_ID() string {
	if x != nil {
		return x.Order_ID
	}
	return ""
}

type UserBookingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Booking_ID string `protobuf:"bytes,2,opt,name=Booking_ID,json=BookingID,proto3" json:"Booking_ID,omitempty"`
}

func (x *UserBookingResponse) Reset() {
	*x = UserBookingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBookingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBookingResponse) ProtoMessage() {}

func (x *UserBookingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBookingResponse.ProtoReflect.Descriptor instead.
func (*UserBookingResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

func (x *UserBookingResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserBookingResponse) GetBooking_ID() string {
	if x != nil {
		return x.Booking_ID
	}
	return ""
}

type UserBooking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref_ID  string `protobuf:"bytes,1,opt,name=Ref_ID,json=RefID,proto3" json:"Ref_ID,omitempty"`
	User_ID int64  `protobuf:"varint,2,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Typ     string `protobuf:"bytes,3,opt,name=Typ,proto3" json:"Typ,omitempty"`
}

func (x *UserBooking) Reset() {
	*x = UserBooking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBooking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBooking) ProtoMessage() {}

func (x *UserBooking) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBooking.ProtoReflect.Descriptor instead.
func (*UserBooking) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *UserBooking) GetRef_ID() string {
	if x != nil {
		return x.Ref_ID
	}
	return ""
}

func (x *UserBooking) GetUser_ID() int64 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

func (x *UserBooking) GetTyp() string {
	if x != nil {
		return x.Typ
	}
	return ""
}

type UserTravellerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status               string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Package_Price        int64  `protobuf:"varint,2,opt,name=Package_Price,json=PackagePrice,proto3" json:"Package_Price,omitempty"`
	Activity_Total_Price int64  `protobuf:"varint,3,opt,name=Activity_Total_Price,json=ActivityTotalPrice,proto3" json:"Activity_Total_Price,omitempty"`
	Total_Price          int64  `protobuf:"varint,4,opt,name=Total_Price,json=TotalPrice,proto3" json:"Total_Price,omitempty"`
	Advance_Amount       int64  `protobuf:"varint,5,opt,name=Advance_Amount,json=AdvanceAmount,proto3" json:"Advance_Amount,omitempty"`
	Ref_ID               string `protobuf:"bytes,6,opt,name=Ref_ID,json=RefID,proto3" json:"Ref_ID,omitempty"`
}

func (x *UserTravellerResponse) Reset() {
	*x = UserTravellerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTravellerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTravellerResponse) ProtoMessage() {}

func (x *UserTravellerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTravellerResponse.ProtoReflect.Descriptor instead.
func (*UserTravellerResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

func (x *UserTravellerResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserTravellerResponse) GetPackage_Price() int64 {
	if x != nil {
		return x.Package_Price
	}
	return 0
}

func (x *UserTravellerResponse) GetActivity_Total_Price() int64 {
	if x != nil {
		return x.Activity_Total_Price
	}
	return 0
}

func (x *UserTravellerResponse) GetTotal_Price() int64 {
	if x != nil {
		return x.Total_Price
	}
	return 0
}

func (x *UserTravellerResponse) GetAdvance_Amount() int64 {
	if x != nil {
		return x.Advance_Amount
	}
	return 0
}

func (x *UserTravellerResponse) GetRef_ID() string {
	if x != nil {
		return x.Ref_ID
	}
	return ""
}

type UserTravellerDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Age         string   `protobuf:"bytes,2,opt,name=Age,proto3" json:"Age,omitempty"`
	Gender      string   `protobuf:"bytes,3,opt,name=Gender,proto3" json:"Gender,omitempty"`
	Activity_ID []string `protobuf:"bytes,4,rep,name=Activity_ID,json=ActivityID,proto3" json:"Activity_ID,omitempty"`
}

func (x *UserTravellerDetails) Reset() {
	*x = UserTravellerDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTravellerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTravellerDetails) ProtoMessage() {}

func (x *UserTravellerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTravellerDetails.ProtoReflect.Descriptor instead.
func (*UserTravellerDetails) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11}
}

func (x *UserTravellerDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserTravellerDetails) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *UserTravellerDetails) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UserTravellerDetails) GetActivity_ID() []string {
	if x != nil {
		return x.Activity_ID
	}
	return nil
}

type UserTravellerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Traveller_Details []*UserTravellerDetails `protobuf:"bytes,1,rep,name=Traveller_Details,json=TravellerDetails,proto3" json:"Traveller_Details,omitempty"`
	User_ID           string                  `protobuf:"bytes,2,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Package_ID        string                  `protobuf:"bytes,3,opt,name=Package_ID,json=PackageID,proto3" json:"Package_ID,omitempty"`
}

func (x *UserTravellerRequest) Reset() {
	*x = UserTravellerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTravellerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTravellerRequest) ProtoMessage() {}

func (x *UserTravellerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTravellerRequest.ProtoReflect.Descriptor instead.
func (*UserTravellerRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12}
}

func (x *UserTravellerRequest) GetTraveller_Details() []*UserTravellerDetails {
	if x != nil {
		return x.Traveller_Details
	}
	return nil
}

func (x *UserTravellerRequest) GetUser_ID() string {
	if x != nil {
		return x.User_ID
	}
	return ""
}

func (x *UserTravellerRequest) GetPackage_ID() string {
	if x != nil {
		return x.Package_ID
	}
	return ""
}

type UserPackages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packages []*UserPackage `protobuf:"bytes,1,rep,name=Packages,proto3" json:"Packages,omitempty"`
}

func (x *UserPackages) Reset() {
	*x = UserPackages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPackages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPackages) ProtoMessage() {}

func (x *UserPackages) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPackages.ProtoReflect.Descriptor instead.
func (*UserPackages) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13}
}

func (x *UserPackages) GetPackages() []*UserPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

type UserSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category_ID       int64    `protobuf:"varint,1,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
	Traveler_Count    int64    `protobuf:"varint,2,opt,name=Traveler_Count,json=TravelerCount,proto3" json:"Traveler_Count,omitempty"`
	Pickup_Place      string   `protobuf:"bytes,3,opt,name=Pickup_Place,json=PickupPlace,proto3" json:"Pickup_Place,omitempty"`
	Final_Destination string   `protobuf:"bytes,4,opt,name=Final_Destination,json=FinalDestination,proto3" json:"Final_Destination,omitempty"`
	Date              string   `protobuf:"bytes,5,opt,name=Date,proto3" json:"Date,omitempty"`
	Page              int64    `protobuf:"varint,6,opt,name=Page,proto3" json:"Page,omitempty"`
	End_Date          string   `protobuf:"bytes,7,opt,name=End_Date,json=EndDate,proto3" json:"End_Date,omitempty"`
	Max_Destination   int64    `protobuf:"varint,8,opt,name=Max_Destination,json=MaxDestination,proto3" json:"Max_Destination,omitempty"`
	Destination       []string `protobuf:"bytes,9,rep,name=Destination,proto3" json:"Destination,omitempty"`
}

func (x *UserSearch) Reset() {
	*x = UserSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSearch) ProtoMessage() {}

func (x *UserSearch) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSearch.ProtoReflect.Descriptor instead.
func (*UserSearch) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{14}
}

func (x *UserSearch) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

func (x *UserSearch) GetTraveler_Count() int64 {
	if x != nil {
		return x.Traveler_Count
	}
	return 0
}

func (x *UserSearch) GetPickup_Place() string {
	if x != nil {
		return x.Pickup_Place
	}
	return ""
}

func (x *UserSearch) GetFinal_Destination() string {
	if x != nil {
		return x.Final_Destination
	}
	return ""
}

func (x *UserSearch) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *UserSearch) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserSearch) GetEnd_Date() string {
	if x != nil {
		return x.End_Date
	}
	return ""
}

func (x *UserSearch) GetMax_Destination() int64 {
	if x != nil {
		return x.Max_Destination
	}
	return 0
}

func (x *UserSearch) GetDestination() []string {
	if x != nil {
		return x.Destination
	}
	return nil
}

type UserCategories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*UserCategory `protobuf:"bytes,1,rep,name=Categories,proto3" json:"Categories,omitempty"`
}

func (x *UserCategories) Reset() {
	*x = UserCategories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCategories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCategories) ProtoMessage() {}

func (x *UserCategories) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCategories.ProtoReflect.Descriptor instead.
func (*UserCategories) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{15}
}

func (x *UserCategories) GetCategories() []*UserCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

type UserNew_Password struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	New_Password string `protobuf:"bytes,1,opt,name=New_Password,json=NewPassword,proto3" json:"New_Password,omitempty"`
	ID           string `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *UserNew_Password) Reset() {
	*x = UserNew_Password{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNew_Password) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNew_Password) ProtoMessage() {}

func (x *UserNew_Password) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNew_Password.ProtoReflect.Descriptor instead.
func (*UserNew_Password) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{16}
}

func (x *UserNew_Password) GetNew_Password() string {
	if x != nil {
		return x.New_Password
	}
	return ""
}

func (x *UserNew_Password) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type UserForget_PasswordVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OTP   string `protobuf:"bytes,1,opt,name=OTP,proto3" json:"OTP,omitempty"`
	Phone string `protobuf:"bytes,2,opt,name=Phone,proto3" json:"Phone,omitempty"`
}

func (x *UserForget_PasswordVerify) Reset() {
	*x = UserForget_PasswordVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserForget_PasswordVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserForget_PasswordVerify) ProtoMessage() {}

func (x *UserForget_PasswordVerify) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserForget_PasswordVerify.ProtoReflect.Descriptor instead.
func (*UserForget_PasswordVerify) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{17}
}

func (x *UserForget_PasswordVerify) GetOTP() string {
	if x != nil {
		return x.OTP
	}
	return ""
}

func (x *UserForget_PasswordVerify) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type UserForget_Password struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=Phone,proto3" json:"Phone,omitempty"`
}

func (x *UserForget_Password) Reset() {
	*x = UserForget_Password{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserForget_Password) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserForget_Password) ProtoMessage() {}

func (x *UserForget_Password) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserForget_Password.ProtoReflect.Descriptor instead.
func (*UserForget_Password) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{18}
}

func (x *UserForget_Password) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type UserCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category_ID   int64  `protobuf:"varint,1,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
	Category_Name string `protobuf:"bytes,2,opt,name=Category_Name,json=CategoryName,proto3" json:"Category_Name,omitempty"`
}

func (x *UserCategory) Reset() {
	*x = UserCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCategory) ProtoMessage() {}

func (x *UserCategory) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCategory.ProtoReflect.Descriptor instead.
func (*UserCategory) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{19}
}

func (x *UserCategory) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

func (x *UserCategory) GetCategory_Name() string {
	if x != nil {
		return x.Category_Name
	}
	return ""
}

type UserFoodMenus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Food_Menus []*UserFoodMenu `protobuf:"bytes,1,rep,name=Food_Menus,json=FoodMenus,proto3" json:"Food_Menus,omitempty"`
}

func (x *UserFoodMenus) Reset() {
	*x = UserFoodMenus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFoodMenus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFoodMenus) ProtoMessage() {}

func (x *UserFoodMenus) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFoodMenus.ProtoReflect.Descriptor instead.
func (*UserFoodMenus) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{20}
}

func (x *UserFoodMenus) GetFood_Menus() []*UserFoodMenu {
	if x != nil {
		return x.Food_Menus
	}
	return nil
}

type UserFoodMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Food_Menu_ID int64  `protobuf:"varint,1,opt,name=Food_Menu_ID,json=FoodMenuID,proto3" json:"Food_Menu_ID,omitempty"`
	Package_ID   int64  `protobuf:"varint,2,opt,name=Package_ID,json=PackageID,proto3" json:"Package_ID,omitempty"`
	Breakfast    string `protobuf:"bytes,3,opt,name=Breakfast,proto3" json:"Breakfast,omitempty"`
	Lunch        string `protobuf:"bytes,4,opt,name=Lunch,proto3" json:"Lunch,omitempty"`
	Dinner       string `protobuf:"bytes,5,opt,name=Dinner,proto3" json:"Dinner,omitempty"`
	Date         string `protobuf:"bytes,6,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *UserFoodMenu) Reset() {
	*x = UserFoodMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFoodMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFoodMenu) ProtoMessage() {}

func (x *UserFoodMenu) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFoodMenu.ProtoReflect.Descriptor instead.
func (*UserFoodMenu) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{21}
}

func (x *UserFoodMenu) GetFood_Menu_ID() int64 {
	if x != nil {
		return x.Food_Menu_ID
	}
	return 0
}

func (x *UserFoodMenu) GetPackage_ID() int64 {
	if x != nil {
		return x.Package_ID
	}
	return 0
}

func (x *UserFoodMenu) GetBreakfast() string {
	if x != nil {
		return x.Breakfast
	}
	return ""
}

func (x *UserFoodMenu) GetLunch() string {
	if x != nil {
		return x.Lunch
	}
	return ""
}

func (x *UserFoodMenu) GetDinner() string {
	if x != nil {
		return x.Dinner
	}
	return ""
}

func (x *UserFoodMenu) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type UserActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity_ID    int64  `protobuf:"varint,1,opt,name=Activity_ID,json=ActivityID,proto3" json:"Activity_ID,omitempty"`
	Activity_Name  string `protobuf:"bytes,2,opt,name=Activity_Name,json=ActivityName,proto3" json:"Activity_Name,omitempty"`
	Description    string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Location       string `protobuf:"bytes,4,opt,name=Location,proto3" json:"Location,omitempty"`
	Activity_Type  string `protobuf:"bytes,5,opt,name=Activity_Type,json=ActivityType,proto3" json:"Activity_Type,omitempty"`
	Amount         int64  `protobuf:"varint,6,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Date           string `protobuf:"bytes,7,opt,name=Date,proto3" json:"Date,omitempty"`
	Time           string `protobuf:"bytes,8,opt,name=Time,proto3" json:"Time,omitempty"`
	Destination_ID int64  `protobuf:"varint,9,opt,name=Destination_ID,json=DestinationID,proto3" json:"Destination_ID,omitempty"`
}

func (x *UserActivity) Reset() {
	*x = UserActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivity) ProtoMessage() {}

func (x *UserActivity) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivity.ProtoReflect.Descriptor instead.
func (*UserActivity) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{22}
}

func (x *UserActivity) GetActivity_ID() int64 {
	if x != nil {
		return x.Activity_ID
	}
	return 0
}

func (x *UserActivity) GetActivity_Name() string {
	if x != nil {
		return x.Activity_Name
	}
	return ""
}

func (x *UserActivity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserActivity) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UserActivity) GetActivity_Type() string {
	if x != nil {
		return x.Activity_Type
	}
	return ""
}

func (x *UserActivity) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UserActivity) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *UserActivity) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *UserActivity) GetDestination_ID() int64 {
	if x != nil {
		return x.Destination_ID
	}
	return 0
}

type UserDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination_ID      int64           `protobuf:"varint,1,opt,name=Destination_ID,json=DestinationID,proto3" json:"Destination_ID,omitempty"`
	Destination_Name    string          `protobuf:"bytes,2,opt,name=Destination_Name,json=DestinationName,proto3" json:"Destination_Name,omitempty"`
	Description         string          `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Min_Price           int64           `protobuf:"varint,4,opt,name=Min_Price,json=MinPrice,proto3" json:"Min_Price,omitempty"`
	Max_Capacity        int64           `protobuf:"varint,5,opt,name=Max_Capacity,json=MaxCapacity,proto3" json:"Max_Capacity,omitempty"`
	Image               string          `protobuf:"bytes,6,opt,name=Image,proto3" json:"Image,omitempty"`
	Activity            []*UserActivity `protobuf:"bytes,7,rep,name=Activity,proto3" json:"Activity,omitempty"`
	Package_ID          int64           `protobuf:"varint,8,opt,name=Package_ID,json=PackageID,proto3" json:"Package_ID,omitempty"`
	Transportation_Mode string          `protobuf:"bytes,9,opt,name=Transportation_Mode,json=TransportationMode,proto3" json:"Transportation_Mode,omitempty"`
	Arrival_Location    string          `protobuf:"bytes,10,opt,name=Arrival_Location,json=ArrivalLocation,proto3" json:"Arrival_Location,omitempty"`
}

func (x *UserDestination) Reset() {
	*x = UserDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDestination) ProtoMessage() {}

func (x *UserDestination) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDestination.ProtoReflect.Descriptor instead.
func (*UserDestination) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{23}
}

func (x *UserDestination) GetDestination_ID() int64 {
	if x != nil {
		return x.Destination_ID
	}
	return 0
}

func (x *UserDestination) GetDestination_Name() string {
	if x != nil {
		return x.Destination_Name
	}
	return ""
}

func (x *UserDestination) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserDestination) GetMin_Price() int64 {
	if x != nil {
		return x.Min_Price
	}
	return 0
}

func (x *UserDestination) GetMax_Capacity() int64 {
	if x != nil {
		return x.Max_Capacity
	}
	return 0
}

func (x *UserDestination) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UserDestination) GetActivity() []*UserActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *UserDestination) GetPackage_ID() int64 {
	if x != nil {
		return x.Package_ID
	}
	return 0
}

func (x *UserDestination) GetTransportation_Mode() string {
	if x != nil {
		return x.Transportation_Mode
	}
	return ""
}

func (x *UserDestination) GetArrival_Location() string {
	if x != nil {
		return x.Arrival_Location
	}
	return ""
}

type UserPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package_ID        int64              `protobuf:"varint,1,opt,name=Package_ID,json=PackageID,proto3" json:"Package_ID,omitempty"`
	Package_Name      string             `protobuf:"bytes,2,opt,name=Package_Name,json=PackageName,proto3" json:"Package_Name,omitempty"`
	Coordinator_ID    int64              `protobuf:"varint,3,opt,name=Coordinator_ID,json=CoordinatorID,proto3" json:"Coordinator_ID,omitempty"`
	Start_Location    string             `protobuf:"bytes,4,opt,name=Start_Location,json=StartLocation,proto3" json:"Start_Location,omitempty"`
	Available_Space   int64              `protobuf:"varint,5,opt,name=Available_Space,json=AvailableSpace,proto3" json:"Available_Space,omitempty"`
	Start_Date        string             `protobuf:"bytes,6,opt,name=Start_Date,json=StartDate,proto3" json:"Start_Date,omitempty"`
	Start_Time        string             `protobuf:"bytes,7,opt,name=Start_Time,json=StartTime,proto3" json:"Start_Time,omitempty"`
	End_Date          string             `protobuf:"bytes,8,opt,name=End_Date,json=EndDate,proto3" json:"End_Date,omitempty"`
	Price             int64              `protobuf:"varint,9,opt,name=Price,proto3" json:"Price,omitempty"`
	Image             string             `protobuf:"bytes,10,opt,name=Image,proto3" json:"Image,omitempty"`
	Destination_Count int64              `protobuf:"varint,11,opt,name=Destination_Count,json=DestinationCount,proto3" json:"Destination_Count,omitempty"`
	Destination       string             `protobuf:"bytes,12,opt,name=Destination,proto3" json:"Destination,omitempty"`
	Description       string             `protobuf:"bytes,13,opt,name=Description,proto3" json:"Description,omitempty"`
	Max_Capacity      int64              `protobuf:"varint,14,opt,name=Max_Capacity,json=MaxCapacity,proto3" json:"Max_Capacity,omitempty"`
	Category_ID       int64              `protobuf:"varint,15,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
	Category          *UserCategory      `protobuf:"bytes,16,opt,name=Category,proto3" json:"Category,omitempty"`
	Destinations      []*UserDestination `protobuf:"bytes,17,rep,name=Destinations,proto3" json:"Destinations,omitempty"`
}

func (x *UserPackage) Reset() {
	*x = UserPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPackage) ProtoMessage() {}

func (x *UserPackage) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPackage.ProtoReflect.Descriptor instead.
func (*UserPackage) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{24}
}

func (x *UserPackage) GetPackage_ID() int64 {
	if x != nil {
		return x.Package_ID
	}
	return 0
}

func (x *UserPackage) GetPackage_Name() string {
	if x != nil {
		return x.Package_Name
	}
	return ""
}

func (x *UserPackage) GetCoordinator_ID() int64 {
	if x != nil {
		return x.Coordinator_ID
	}
	return 0
}

func (x *UserPackage) GetStart_Location() string {
	if x != nil {
		return x.Start_Location
	}
	return ""
}

func (x *UserPackage) GetAvailable_Space() int64 {
	if x != nil {
		return x.Available_Space
	}
	return 0
}

func (x *UserPackage) GetStart_Date() string {
	if x != nil {
		return x.Start_Date
	}
	return ""
}

func (x *UserPackage) GetStart_Time() string {
	if x != nil {
		return x.Start_Time
	}
	return ""
}

func (x *UserPackage) GetEnd_Date() string {
	if x != nil {
		return x.End_Date
	}
	return ""
}

func (x *UserPackage) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UserPackage) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UserPackage) GetDestination_Count() int64 {
	if x != nil {
		return x.Destination_Count
	}
	return 0
}

func (x *UserPackage) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *UserPackage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserPackage) GetMax_Capacity() int64 {
	if x != nil {
		return x.Max_Capacity
	}
	return 0
}

func (x *UserPackage) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

func (x *UserPackage) GetCategory() *UserCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *UserPackage) GetDestinations() []*UserDestination {
	if x != nil {
		return x.Destinations
	}
	return nil
}

type UserView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Status  string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Page    int64  `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`
	User_ID int64  `protobuf:"varint,4,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
}

func (x *UserView) Reset() {
	*x = UserView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserView) ProtoMessage() {}

func (x *UserView) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserView.ProtoReflect.Descriptor instead.
func (*UserView) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{25}
}

func (x *UserView) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UserView) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserView) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserView) GetUser_ID() int64 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

type UserLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Role     string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *UserLogin) Reset() {
	*x = UserLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLogin) ProtoMessage() {}

func (x *UserLogin) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLogin.ProtoReflect.Descriptor instead.
func (*UserLogin) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{26}
}

func (x *UserLogin) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserLogin) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type UserLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token         string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	Refresh_Token string `protobuf:"bytes,2,opt,name=Refresh_Token,json=RefreshToken,proto3" json:"Refresh_Token,omitempty"`
}

func (x *UserLoginResponse) Reset() {
	*x = UserLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginResponse) ProtoMessage() {}

func (x *UserLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginResponse.ProtoReflect.Descriptor instead.
func (*UserLoginResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{27}
}

func (x *UserLoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserLoginResponse) GetRefresh_Token() string {
	if x != nil {
		return x.Refresh_Token
	}
	return ""
}

type UserSignup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Phone    string `protobuf:"bytes,3,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	Role     string `protobuf:"bytes,5,opt,name=Role,proto3" json:"Role,omitempty"`
	ID       int64  `protobuf:"varint,6,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *UserSignup) Reset() {
	*x = UserSignup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignup) ProtoMessage() {}

func (x *UserSignup) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignup.ProtoReflect.Descriptor instead.
func (*UserSignup) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{28}
}

func (x *UserSignup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserSignup) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserSignup) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserSignup) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserSignup) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UserSignup) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	ID      int64  `protobuf:"varint,3,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{29}
}

func (x *UserResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserResponse) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type UserVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OTP   int32  `protobuf:"varint,1,opt,name=OTP,proto3" json:"OTP,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
}

func (x *UserVerify) Reset() {
	*x = UserVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserVerify) ProtoMessage() {}

func (x *UserVerify) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserVerify.ProtoReflect.Descriptor instead.
func (*UserVerify) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{30}
}

func (x *UserVerify) GetOTP() int32 {
	if x != nil {
		return x.OTP
	}
	return 0
}

func (x *UserVerify) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x70, 0x62, 0x22, 0x2a, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x35, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a,
	0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70,
	0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x45, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x42,
	0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x31, 0x0a, 0x09, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x86, 0x03, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x21, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72,
	0x5f, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x44,
	0x12, 0x1b, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0a,
	0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a,
	0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x50, 0x61,
	0x69, 0x64, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x50, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x1b,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x08,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd5, 0x01, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x5f, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44,
	0x12, 0x19, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x46, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x61, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x5f, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x65, 0x66, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x55,
	0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x79, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x54, 0x79, 0x70, 0x22, 0xe5, 0x01, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a,
	0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x5f, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x65, 0x66, 0x49, 0x44, 0x22, 0x75,
	0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x41, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x22, 0x99, 0x01, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49,
	0x0a, 0x11, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x10, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65,
	0x72, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x22, 0x3f, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x2f, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x22, 0xb2, 0x02, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x44, 0x12, 0x25, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x72, 0x5f, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x76,
	0x65, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x5f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x4d, 0x61, 0x78, 0x5f, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x4d, 0x61, 0x78, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x45, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x65, 0x77, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x4f, 0x54, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4f, 0x54, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x2b, 0x0a, 0x13, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x54, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x0d, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x44,
	0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12,
	0x33, 0x0a, 0x0a, 0x46, 0x6f, 0x6f, 0x64, 0x5f, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x09, 0x46, 0x6f, 0x6f, 0x64, 0x4d,
	0x65, 0x6e, 0x75, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6f,
	0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x20, 0x0a, 0x0c, 0x46, 0x6f, 0x6f, 0x64, 0x5f, 0x4d, 0x65,
	0x6e, 0x75, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x46, 0x6f, 0x6f,
	0x64, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x66,
	0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x72, 0x65, 0x61, 0x6b,
	0x66, 0x61, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x88, 0x03, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x29, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x4d, 0x61, 0x78, 0x5f, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x41, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x5f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xef, 0x04, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x12, 0x21, 0x0a, 0x0c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x45, 0x6e, 0x64,
	0x5f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x5f, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5f, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x51, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x4e, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x4f, 0x54, 0x50, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x4f, 0x54, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x32,
	0xb3, 0x0d, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a,
	0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67,
	0x6e, 0x75, 0x70, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x17, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x65, 0x77,
	0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3a, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x12, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x12,
	0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x56, 0x69, 0x65, 0x77, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x10, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x1a,
	0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77,
	0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e, 0x75,
	0x73, 0x12, 0x53, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x13, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x56, 0x69, 0x65, 0x77, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12,
	0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69,
	0x65, 0x77, 0x1a, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x14,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x19, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x10, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x11, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x34, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65,
	0x77, 0x1a, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_user_proto_goTypes = []interface{}{
	(*UserCount)(nil),                   // 0: userpb.UserCount
	(*UserUsers)(nil),                   // 1: userpb.UserUsers
	(*TokenData)(nil),                   // 2: userpb.TokenData
	(*UserHistories)(nil),               // 3: userpb.UserHistories
	(*UserHistory)(nil),                 // 4: userpb.UserHistory
	(*UserPaymentConfirmedRequest)(nil), // 5: userpb.UserPaymentConfirmedRequest
	(*UserFilter)(nil),                  // 6: userpb.UserFilter
	(*UserOnlinePaymentResponse)(nil),   // 7: userpb.UserOnlinePaymentResponse
	(*UserBookingResponse)(nil),         // 8: userpb.UserBookingResponse
	(*UserBooking)(nil),                 // 9: userpb.UserBooking
	(*UserTravellerResponse)(nil),       // 10: userpb.UserTravellerResponse
	(*UserTravellerDetails)(nil),        // 11: userpb.UserTravellerDetails
	(*UserTravellerRequest)(nil),        // 12: userpb.UserTravellerRequest
	(*UserPackages)(nil),                // 13: userpb.UserPackages
	(*UserSearch)(nil),                  // 14: userpb.UserSearch
	(*UserCategories)(nil),              // 15: userpb.UserCategories
	(*UserNew_Password)(nil),            // 16: userpb.UserNew_Password
	(*UserForget_PasswordVerify)(nil),   // 17: userpb.UserForget_PasswordVerify
	(*UserForget_Password)(nil),         // 18: userpb.UserForget_Password
	(*UserCategory)(nil),                // 19: userpb.UserCategory
	(*UserFoodMenus)(nil),               // 20: userpb.UserFoodMenus
	(*UserFoodMenu)(nil),                // 21: userpb.UserFoodMenu
	(*UserActivity)(nil),                // 22: userpb.UserActivity
	(*UserDestination)(nil),             // 23: userpb.UserDestination
	(*UserPackage)(nil),                 // 24: userpb.UserPackage
	(*UserView)(nil),                    // 25: userpb.UserView
	(*UserLogin)(nil),                   // 26: userpb.UserLogin
	(*UserLoginResponse)(nil),           // 27: userpb.UserLoginResponse
	(*UserSignup)(nil),                  // 28: userpb.UserSignup
	(*UserResponse)(nil),                // 29: userpb.UserResponse
	(*UserVerify)(nil),                  // 30: userpb.UserVerify
}
var file_user_proto_depIdxs = []int32{
	28, // 0: userpb.UserUsers.Users:type_name -> userpb.UserSignup
	4,  // 1: userpb.UserHistories.Histories:type_name -> userpb.UserHistory
	11, // 2: userpb.UserHistory.Travellers:type_name -> userpb.UserTravellerDetails
	11, // 3: userpb.UserTravellerRequest.Traveller_Details:type_name -> userpb.UserTravellerDetails
	24, // 4: userpb.UserPackages.Packages:type_name -> userpb.UserPackage
	19, // 5: userpb.UserCategories.Categories:type_name -> userpb.UserCategory
	21, // 6: userpb.UserFoodMenus.Food_Menus:type_name -> userpb.UserFoodMenu
	22, // 7: userpb.UserDestination.Activity:type_name -> userpb.UserActivity
	19, // 8: userpb.UserPackage.Category:type_name -> userpb.UserCategory
	23, // 9: userpb.UserPackage.Destinations:type_name -> userpb.UserDestination
	26, // 10: userpb.User.UserLoginRequest:input_type -> userpb.UserLogin
	28, // 11: userpb.User.UserSignupRequest:input_type -> userpb.UserSignup
	30, // 12: userpb.User.UserSignupVerifyRequest:input_type -> userpb.UserVerify
	18, // 13: userpb.User.UserForgetPassword:input_type -> userpb.UserForget_Password
	17, // 14: userpb.User.UserForgetPasswordVerify:input_type -> userpb.UserForget_PasswordVerify
	16, // 15: userpb.User.UserNewPassword:input_type -> userpb.UserNew_Password
	28, // 16: userpb.User.UserProfileUpdate:input_type -> userpb.UserSignup
	25, // 17: userpb.User.UserViewDestination:input_type -> userpb.UserView
	25, // 18: userpb.User.UserViewActivity:input_type -> userpb.UserView
	25, // 19: userpb.User.UserViewCategories:input_type -> userpb.UserView
	14, // 20: userpb.User.UserSearchPackage:input_type -> userpb.UserSearch
	6,  // 21: userpb.User.UserFilterPackage:input_type -> userpb.UserFilter
	25, // 22: userpb.User.UserViewPackage:input_type -> userpb.UserView
	25, // 23: userpb.User.UserViewFoodMenu:input_type -> userpb.UserView
	12, // 24: userpb.User.UserTravellerDetails:input_type -> userpb.UserTravellerRequest
	9,  // 25: userpb.User.UserOfflineBooking:input_type -> userpb.UserBooking
	25, // 26: userpb.User.UserViewPackages:input_type -> userpb.UserView
	9,  // 27: userpb.User.UserOnlinePayment:input_type -> userpb.UserBooking
	5,  // 28: userpb.User.UserPaymentConfirmed:input_type -> userpb.UserPaymentConfirmedRequest
	25, // 29: userpb.User.UserViewHistory:input_type -> userpb.UserView
	25, // 30: userpb.User.UserViewBooking:input_type -> userpb.UserView
	25, // 31: userpb.User.UserCancelBooking:input_type -> userpb.UserView
	2,  // 32: userpb.User.UserRefreshToken:input_type -> userpb.TokenData
	25, // 33: userpb.User.UsersCount:input_type -> userpb.UserView
	25, // 34: userpb.User.UserViewUsers:input_type -> userpb.UserView
	25, // 35: userpb.User.UserViewUser:input_type -> userpb.UserView
	27, // 36: userpb.User.UserLoginRequest:output_type -> userpb.UserLoginResponse
	29, // 37: userpb.User.UserSignupRequest:output_type -> userpb.UserResponse
	29, // 38: userpb.User.UserSignupVerifyRequest:output_type -> userpb.UserResponse
	29, // 39: userpb.User.UserForgetPassword:output_type -> userpb.UserResponse
	29, // 40: userpb.User.UserForgetPasswordVerify:output_type -> userpb.UserResponse
	29, // 41: userpb.User.UserNewPassword:output_type -> userpb.UserResponse
	29, // 42: userpb.User.UserProfileUpdate:output_type -> userpb.UserResponse
	23, // 43: userpb.User.UserViewDestination:output_type -> userpb.UserDestination
	22, // 44: userpb.User.UserViewActivity:output_type -> userpb.UserActivity
	15, // 45: userpb.User.UserViewCategories:output_type -> userpb.UserCategories
	13, // 46: userpb.User.UserSearchPackage:output_type -> userpb.UserPackages
	13, // 47: userpb.User.UserFilterPackage:output_type -> userpb.UserPackages
	24, // 48: userpb.User.UserViewPackage:output_type -> userpb.UserPackage
	20, // 49: userpb.User.UserViewFoodMenu:output_type -> userpb.UserFoodMenus
	10, // 50: userpb.User.UserTravellerDetails:output_type -> userpb.UserTravellerResponse
	8,  // 51: userpb.User.UserOfflineBooking:output_type -> userpb.UserBookingResponse
	13, // 52: userpb.User.UserViewPackages:output_type -> userpb.UserPackages
	7,  // 53: userpb.User.UserOnlinePayment:output_type -> userpb.UserOnlinePaymentResponse
	8,  // 54: userpb.User.UserPaymentConfirmed:output_type -> userpb.UserBookingResponse
	3,  // 55: userpb.User.UserViewHistory:output_type -> userpb.UserHistories
	4,  // 56: userpb.User.UserViewBooking:output_type -> userpb.UserHistory
	29, // 57: userpb.User.UserCancelBooking:output_type -> userpb.UserResponse
	27, // 58: userpb.User.UserRefreshToken:output_type -> userpb.UserLoginResponse
	0,  // 59: userpb.User.UsersCount:output_type -> userpb.UserCount
	1,  // 60: userpb.User.UserViewUsers:output_type -> userpb.UserUsers
	28, // 61: userpb.User.UserViewUser:output_type -> userpb.UserSignup
	36, // [36:62] is the sub-list for method output_type
	10, // [10:36] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserHistories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPaymentConfirmedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOnlinePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBookingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBooking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTravellerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTravellerDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTravellerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPackages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCategories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNew_Password); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserForget_PasswordVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserForget_Password); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFoodMenus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFoodMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}
